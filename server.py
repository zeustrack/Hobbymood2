#!/usr/bin/env python3
"""
Serveur simplifi√© pour Hobbymood OBS Controller
"""

import asyncio
import json
import os
from pathlib import Path
from http.server import HTTPServer, SimpleHTTPRequestHandler
import threading
import webbrowser
from urllib.parse import urlparse

class HobbymoodHandler(SimpleHTTPRequestHandler):
    """Handler personnalis√© pour servir les pages"""
    
    def do_GET(self):
        # Routes personnalis√©es
        if self.path == '/':
            self.path = '/frontend/admin-simple.html'
        elif self.path == '/admin':
            self.path = '/frontend/admin-simple.html'
        elif self.path == '/overlay':
            self.path = '/frontend/overlay-simple.html'
        elif self.path == '/scores':
            self.path = '/frontend/scores.html'
        
        # Servir les fichiers statiques
        return SimpleHTTPRequestHandler.do_GET(self)
    
    def end_headers(self):
        # Headers CORS pour permettre les requ√™tes
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        SimpleHTTPRequestHandler.end_headers(self)

def create_demo_assets():
    """Cr√©er des assets de d√©monstration"""
    assets_dir = Path("assets")
    assets_dir.mkdir(exist_ok=True)
    
    # Cr√©er la structure des dossiers
    for jeu in ["jeu1", "jeu2", "jeu3"]:
        (assets_dir / jeu / "questions").mkdir(parents=True, exist_ok=True)
        (assets_dir / jeu).mkdir(exist_ok=True)
    
    (assets_dir / "scores").mkdir(exist_ok=True)
    
    # Cr√©er des fichiers de d√©monstration
    demo_content = """
    <html>
    <head><title>Asset de d√©monstration</title></head>
    <body style="background: linear-gradient(45deg, #667eea, #764ba2); color: white; font-family: Arial; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0;">
        <div style="text-align: center; padding: 40px; background: rgba(255,255,255,0.1); border-radius: 20px; backdrop-filter: blur(10px);">
            <h1 style="font-size: 3rem; margin: 0;">üéÆ</h1>
            <h2 style="margin: 20px 0;">Asset de d√©monstration</h2>
            <p style="font-size: 1.2rem;">Cet asset sera remplac√© par vos images</p>
        </div>
    </body>
    </html>
    """
    
    # Cr√©er des fichiers HTML de d√©monstration
    for jeu in ["jeu1", "jeu2", "jeu3"]:
        # Logo
        with open(assets_dir / jeu / "logo.html", "w", encoding="utf-8") as f:
            f.write(demo_content.replace("Asset de d√©monstration", f"Logo {jeu.upper()}"))
        
        # Pr√©sentation
        with open(assets_dir / jeu / "presentation.html", "w", encoding="utf-8") as f:
            f.write(demo_content.replace("Asset de d√©monstration", f"Pr√©sentation {jeu.upper()}"))
        
        # Questions
        for i in range(1, 11):
            with open(assets_dir / jeu / "questions" / f"Q{i}.html", "w", encoding="utf-8") as f:
                f.write(demo_content.replace("Asset de d√©monstration", f"Question {i} - {jeu.upper()}"))
            
            with open(assets_dir / jeu / "questions" / f"Q{i}_reponses.html", "w", encoding="utf-8") as f:
                f.write(demo_content.replace("Asset de d√©monstration", f"R√©ponse {i} - {jeu.upper()}"))
    
    # Base des scores
    with open(assets_dir / "scores" / "base.html", "w", encoding="utf-8") as f:
        f.write(demo_content.replace("Asset de d√©monstration", "Scores"))

def start_server():
    """D√©marrer le serveur"""
    port = 8000
    server_address = ('', port)
    
    print("üéÆ Hobbymood OBS Controller - Serveur Simplifi√©")
    print("=" * 50)
    print(f"üìç Interface admin: http://localhost:{port}/admin")
    print(f"üì∫ Overlay principal: http://localhost:{port}/overlay")
    print(f"üìä Page scores: http://localhost:{port}/scores")
    print("‚èπÔ∏è  Arr√™ter avec Ctrl+C")
    print("-" * 50)
    
    # Cr√©er les assets de d√©monstration
    create_demo_assets()
    
    # D√©marrer le serveur
    httpd = HTTPServer(server_address, HobbymoodHandler)
    
    # Ouvrir automatiquement l'interface admin
    try:
        webbrowser.open(f'http://localhost:{port}/admin')
    except:
        pass
    
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        print("\nüëã Arr√™t du serveur")
        httpd.shutdown()

if __name__ == "__main__":
    start_server() 